type Owner @model @auth(rules: [{allow: public}]) {
  id: ID!
  walletAddress: String
  nickname: String
  notes: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  authID: String
  isChordHero: Boolean
}

type School @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  Creators: [Creator] @hasMany(indexName: "bySchool", fields: ["id"])
}

enum ContentType {
  VIDEO
  TEXT
}

type Content @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  threshold: Int
  type: ContentType
  videoLink: AWSURL
  textContent: String
}

type Ukulele @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  tokenID: String
  contractAddress: String
  chain: String
}

type Creator @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  Ukulele: Ukulele @hasOne
  schoolID: ID! @index(name: "bySchool")
}
 